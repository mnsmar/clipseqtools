=pod

=head1 NAME

CLIPSeqTools::Tutorial::Beginner - beginner's getting started with CLIPSeqTools



=head1 INTRODUCTION

CLIPSeqTools is a collection of tools that can be used for the analysis of CLIP-Seq data.
It provides a wide range of analyses, from general statistics (e.g. genome read coverage) to more complex analysis (i.e. relative positioning of reads of two libraries).
The toolbox has been divided in four distinct sub-toolboxes to help in better compartmentalization of the analyses.

=over

=item * clipseqtools - Tools for the analysis of a CLIP-Seq library.

=item * clipseqtools-plot - Tools to make plots and figures from the output of clipseqtools.

=item * clipseqtools-compare - Tools to compare CLIP-Seq libraries with each other.

=item * clipseqtools-preprocess - Helper tools to process raw fastq files with CLIP-Seq data into files compatible with clipseqtools.

=back



=head1 PREREQUISITES

To use CLIPSeqTools you will need

=over

=item * R - Language for statistical computing

=item * STAR - Program for the alignment of reads on reference genome (only if you want to use clipseqtools-preprocess)

=item * cutadapt - Program to remove 5' end adaptor sequence from reads (only if you want to use clipseq-tools preprocess)

=back


=head2 Installing the prerequisites

=head3 R

To get R statistical package and for installation instructions refer to L<http://www.r-project.org/>

=head3 STAR

To get STAR and for installation instructions refer to L<https://code.google.com/p/rna-star/>

=head3 cutadapt

To get cutadapt and for installation instructions refer to L<https://code.google.com/p/cutadapt/>



=head1 INSTALLATION

CLIPSeqTools is a Perl module and should be compatible with Unix style operating systems with the Perl programming language installed.
Chances are that if you are running a Mac or a Linux operating system you already have Perl installed.

Before you install CLIPSeqTools please install the prerequisites listed above.

The simplest way to get CLIPSeqTools installed is to use the CPAN module.
If you are the system administrator and want to install the module system-wide, you'll need to switch to your root user.
To fire up the CPAN module, just get to your command line and run this:

  perl -MCPAN -e shell

If this is the first time you've run CPAN, it's going to ask you a series of questions - in most cases the default answer is fine.
Once you find yourself staring at the C<< cpan> >> command prompt type:

  install CLIPSeqTools

CPAN should take it from there and install CLIPSeqTools.



=head1 GETTING STARTED


=head2 Get the annotation files

CLIPSeqTools relies on certain annotation files to function properly. For convenience, we provide these files for three main species, human (hg19), mouse (mm9) and fly (dme3).
You may access these file at ## TODO ##


=head2 Prepare your working directory

For simplicity we are going to name our working directory C<clip_dir> and assume we are working for the human genome (hg19).

Create a directory in C<clip_dir> named C<data>.
Download and move the C<hg19> directory into C<clip_dir/data>.

Let's assume you have CLIP-Seq data for I<protein_A>.
Create a directory named C<protein_A> in C<clip_dir>.
Copy the fastq file with the CLIP-Seq reads into C<clip_dir/protein_A> and rename it to I<reads.fastq>. Unzip it first, if it is zipped.

Open a command line terminal and navigate to your working directory.

  cd /path/to/clip_dir

If you run the following command

  ls -l

you should see the directories and files that we created above.


=head2 Do the alignment and processing of your FastQ file

To process the fastq file, align the reads on the reference genome, annotate the alignments with genic and repeat masker information issue the following command substituting every <PLACEHOLDER> with your corresponding information.

  clipseqtools-preprocess all --adaptor <5'END ADAPTOR> --fastq protein_A/reads.fastq --gtf data/hg19/annotation/UCSC_gene_parts_genename.gtf --rmsk data/hg19/annotation/rmsk.bed --star_genome data/hg19/STAR/index/hg19-star-sparsed2/ --threads 2 -v

The command is going to take some time (a few hours) so be patient. When it finishes you will have all files required to run clipseqtools analyses in C<clip_dir/protein_A>.


=head2 Run clipseqtools on a single library

To run clipseqtools.

  clipseqtools all --database protein_A/reads.adtrim.star_Aligned.out.single.sorted.db --gtf data/hg19/annotation/UCSC_gene_parts_genename.gtf --rname_sizes data/hg19/chrom.sizes --plot -v

The command is going to take some time (a few hours) so be patient. When it finishes you will find the result files for the analyses in C<clip_dir/protein_A>.


=head2 Compare two libraries.

Suppose you have two libraries on which you run clipseqtools. For simplicity we assume the two directories for these libraries are named C<clip_dir/protein_A> and C<clip_dir/protein_B>.
To compare the two libraries you may run the following command.

  clipseqtools-compare all --database clip_dir/protein_A/reads.adtrim.star_Aligned.out.single.sorted.db --res_prefix clip_dir/protein_A --r_database clip_dir/protein_B/reads.adtrim.star_Aligned.out.single.sorted.db --r_res_prefix clip_dir/protein_B --rname_sizes data/hg19/chrom.sizes --o_prefix clip_dir/protein_A_vs_B/ --plot -v

The command is going to take some time so be patient. When it finishes you will find the result files for the analyses in C<clip_dir/protein_A_vs_B/>.
