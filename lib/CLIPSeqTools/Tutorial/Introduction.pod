=pod

=head1 NAME

CLIPSeqTools::Tutorial::Introduction - An introduction to I<CLIPSeqTools>



=head1 INTRODUCTION

I<CLIPSeqTools> is a collection of command line applications used for the analysis of CLIP-Seq (UV cross-linking and immunoprecipitation with high-throughput sequencing) data.
It offers a wide range of analyses (eg. genome read coverage, motif enrichment, relative positioning of reads of two libraries, etc).

I<CLIPSeqTools> is divided in 4 toolboxes:

=over

=item 1. clipseqtools (Main application to analyse a single CLIP-Seq library.)

=item 2. clipseqtools-compare (Application to compare two CLIP-Seq libraries. Requires to run C<clipseqtools> on each library first.)

=item 3. clipseqtools-plot (Helper application to create plots for the output of C<clipseqtools>. Usually, the plots are created via C<clipseqtools> with the C<--plot> option.)

=item 4. clipseqtools-preprocess (Helper application to process a FastQ file into files that are compatible with C<clipseqtools>.)

=back



=head1 INSTALLATION

=head2 Prerequisites

To use I<CLIPSeqTools> you will need:

=over

=item * R - Language for statistical computing

=item * STAR - Program for the alignment of reads on reference genome (only if you want to use clipseqtools-preprocess)

=item * cutadapt - Program to remove 5' end adaptor sequence from reads (only if you want to use clipseq-tools preprocess)

=back


=head3 Installing the prerequisites

=head4 R

To get R statistical package and for installation instructions refer to L<http://www.r-project.org/>

=head4 STAR

To get STAR and for installation instructions refer to L<https://code.google.com/p/rna-star/>

=head4 cutadapt

To get cutadapt and for installation instructions refer to L<https://code.google.com/p/cutadapt/>


=head3 Installing CLIPSeqTools

I<CLIPSeqTools> is a Perl module and should be compatible with Unix style operating systems with the Perl programming language installed.
Chances are that if you are working on a Mac or a Linux operating system you already have Perl installed.

NOTE: Before continuing, please install the prerequisites listed above.

The simplest way to install I<CLIPSeqTools> is to use CPAN.
If you are the system administrator and want to install the module system-wide, you need to switch to your root user.
To fire up the CPAN module, just get to your command line and run this:

  perl -MCPAN -e shell

If this is the first time you've run CPAN, it's going to ask you a series of questions - in most cases the default answer is fine.
Once you find yourself staring at the C<< cpan> >> command prompt type:

  install CLIPSeqTools

CPAN should take it from there and install I<CLIPSeqTools>.



=head1 GETTING STARTED


=head2 Download required files

I<CLIPSeqTools> relies on annotation files to function properly.

For convenience, we provide the required files for 3 species - human (assembly: hg19), mouse (assembly: mm9) and fly (assembly: dme3).

You may access these file at ## TODO ##


=head2 Prepare working directory

For simplicity, let's call the working directory C<clip> and assume we work for human (hg19).

=over

=item 1. Create a new directory named C<data> inside C<clip/>. This step should create the path C<clip/data/>

=item 2. Download C<hg19> from the links above into the newly created directory C<clip/data/>. This step should create the path C<clip/data/hg19/>

=item 3. Let's assume you have CLIP-Seq data for I<proteinA>. Create a new directory named C<proteinA> inside C<clip/>. This step should create the path C<clip/proteinA/>

=item 4. Copy the FastQ file with the CLIP-Seq reads into C<clip/proteinA/> and rename it to I<reads.fastq>. B<Important:> Unzip it, if it is zipped.

=item 5. If you haven't done it already, open a command line terminal and navigate to your working directory.

  cd /path/to/clip/

=item 6. Run a directory listing with the following command to verify that everything is in place and you are in the correct directory.

  ls -l

=back

=head2 Do alignment and processing of FastQ file

To process the fastq file, align the reads on the reference genome, annotate the alignments with genic and repeat masker information run the following command substituting <PLACEHOLDER> with the appropriate information.

=over

=item 1. If you are running on a machine with B<more> than 32GB RAM.

  clipseqtools-preprocess all --adaptor <5_END_ADAPTOR> --fastq proteinA/reads.fastq --gtf data/hg19/annotation/UCSC_gene_parts_genename.gtf --rmsk data/hg19/annotation/rmsk.bed --star_genome data/hg19/STAR/index/hg19-star/ --o_prefix clip/proteinA/ --threads <NUMBER_OF_PROCESSORS> -v

=item 2. If you are running on a machine with B<more> than 16GB RAM.

  clipseqtools-preprocess all --adaptor <5_END_ADAPTOR> --fastq proteinA/reads.fastq --gtf data/hg19/annotation/UCSC_gene_parts_genename.gtf --rmsk data/hg19/annotation/rmsk.bed --star_genome data/hg19/STAR/index/hg19-star-sparsed2/ --o_prefix clip/proteinA/ --threads <NUMBER_OF_PROCESSORS> -v

=item 3. If you are running on a machine with B<less> than 16GB RAM.

  SORRY NO LUCK HERE

=back

The command above is doing a lot of stuff and it's going to take some time, probably a few hours, so be B<patient>.
When it finishes you will find all files required to run C<clipseqtools> in C<clip/proteinA/>.


=head2 Analyse a single library with C<clipseqtools>

To run C<clipseqtools>.

  clipseqtools all --database proteinA/reads.adtrim.star_Aligned.out.single.sorted.db --gtf data/hg19/annotation/UCSC_gene_parts_genename.gtf --rname_sizes data/hg19/chrom.sizes --o_prefix clip/proteinA/ --plot -v

The command above is doing many operations and is going to take some time, probably a few hours so be B<patient>.
When it finishes you will find the result files in C<clip/proteinA/>.


=head2 Compare two libraries with C<clipseqtools-compare>

Let's assume you have two libraries on which you have run C<clipseqtools>.
For simplicity, we assume the two directories for these libraries are C<clip/proteinA/> and C<clip/protein_B/>.
To compare the two libraries run the following command.

  clipseqtools-compare all --database clip/proteinA/reads.adtrim.star_Aligned.out.single.sorted.db --res_prefix clip/proteinA/ --r_database clip/protein_B/reads.adtrim.star_Aligned.out.single.sorted.db --r_res_prefix clip/protein_B/ --rname_sizes data/hg19/chrom.sizes --o_prefix clip/proteinA_vs_B/ --plot -v

The command is going to take some time so be patient. When it finishes you will find the result files for the analyses in C<clip/proteinA_vs_B/>.

=cut

